# ***** PLAYER STATE CONFIGURATION *****
# PlayerState is a simple plugin which will save and load player state within Minecraft. For
# instance, a server with a survival and creative world using PlayerState can prevent players from
# carrying items from creative into the survival world.


# *****
# LOG LEVEL:
# Set the level of the logs for the PlayerState plugin.
# Options are: off, fatal, error, warn, info, debug, trace, all
# *****
log.level=info


# *****
# EXACTSPAWN:
# The configuration property `exactSpawn` is a boolean and defaults to `true`. This property
# controls how PlayerState manages the spawn location for players. If set to `true` then players
# will spawn to the exact world spawn coordinate when using the command `\spawn`. On death they will
# also return to the exact world spawn coordinate unless they have a bed spawn location set. If set
# to `false` then default Minecraft behavior will occur, with the player spawing at the highest
# location at world spawn using `\spawn` and spawning in nearby the world spawn on death.
# *****
exactSpawn=true


# *****
# GLOBAL STATE:
# The configuration property `state.global` is a string and defaults to "WORLD_ALL". This property
# controls what state all worlds on the server will default to unless specified otherwise. This
# means that unless a world is configured otherwise, it will share all state with other worlds on
# the server. The "WORLD_ALL" is the state string value that will appear in the PlayerState
# database.
# *****
state.global=WORLD_ALL


# *****
# WORLD STATES:
# There is one possible configuration for each world on the server. Using the name of the world and
# the name of the state can create combinations of worlds that share state. Say, for example, that
# you have three worlds. Two are survival and one is creative. You want to share the state on the
# survival worlds but not on creative. Your configuration of states could look like this:
#    state.global=WORLD_ALL
#    state.world.creative=fun
# This would cause the two survival worlds to share state implicitly through the "WORLD_ALL" state
# while separating out the creative (name of the world) world using the "fun" state.
# *****

#state.world.default=foo
#state.world.foo=foo


# *****
# WORLD SAVE CONFIGURATIONS:
# The save configuration properties manage what specific player properties to save for each state.
# Usually the defaults will be good enough for most servers, but these properties allow you to
# configure things differently if you have other needs. Say, for example, that you wanted to have a
# hardcore survival world that kept track of player achievements and statistics separately from your
# main survival world. You could configure that using these properties:
#    save.hardcore.achievements=true
#    save.hardcore.statistics=true
#
# If none are specified then the defaults are:
#    save.<state>.achievements=false
#    save.<state>.statistics=false
#    save.<state>.prefix=false
#    save.<state>.inventory=true
#    save.<state>.gamemode=true
#    save.<state>.locations=true
#    save.<state>.conditions=true

#save.foo.achievements=true
